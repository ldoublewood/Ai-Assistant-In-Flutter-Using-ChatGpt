openapi: 3.0.3
info:
  title: AI Voice Assistant Server API
  description: |
    AI Voice Assistant Server API - Currently in development phase.
    
    **Current Status**: Basic server implementation with health check endpoint.
    
    **Planned Features** (handlers implemented but not yet wired):
    - Complete voice pipeline: ASR â†’ LLM â†’ TTS
    - Voice activity detection (VAD)
    - Voiceprint recognition for user identification
    - Conversation memory management
    - Multi-device support with ESP device binding
    - Role-based access control with subscription tiers
    - Live2D avatar integration
    - Real-time voice processing with streaming support
    
    **Implementation Status Summary**:
    - âœ… `/health` - Health check endpoint (fully implemented)
    - âœ… `/api/v1/` - API info endpoint (fully implemented)  
    - ðŸš§ All other endpoints - Handlers implemented but routes not connected yet
    
    **Next Steps**: Wire up the existing handlers to actual HTTP routes in the server configuration.
  version: 1.0.0-dev
  contact:
    name: AI Voice Assistant Team
    email: support@ai-voice-assistant.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://api.ai-voice-assistant.com
    description: Production server (planned)

security:
  - BearerAuth: []

paths:
  # Health Check - IMPLEMENTED
  /health:
    get:
      tags:
        - System
      summary: Health check endpoint (IMPLEMENTED)
      description: Returns the current health status of the server
      security: []
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2023-10-15T10:30:00Z"
              example:
                status: "healthy"
                timestamp: "2023-10-15T10:30:00Z"

  # API Info - IMPLEMENTED
  /api/v1/:
    get:
      tags:
        - System
      summary: API information endpoint (IMPLEMENTED)
      description: Returns basic API information and version
      security: []
      responses:
        '200':
          description: API information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "AI Voice Assistant Server API"
                  version:
                    type: string
                    example: "1.0.0"
              example:
                message: "AI Voice Assistant Server API"
                version: "1.0.0"

  # Voice Interaction Endpoints - PLANNED (handlers ready)
  /api/v1/voice/interact:
    post:
      tags:
        - Voice
      summary: Process voice interaction (PLANNED)
      description: |
        Main endpoint for voice interaction - processes audio input through ASR, LLM, and TTS pipeline.
        
        **Status**: Handler implemented but route not connected yet.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - audio_data
                - device_id
              properties:
                audio_data:
                  type: string
                  description: Base64 encoded audio data
                  example: "base64_encoded_audio_string"
                session_id:
                  type: string
                  description: Optional session ID for conversation continuity
                  example: "sess_123456"
                device_id:
                  type: string
                  description: Device identifier
                  example: "device_123456"
                voice_config:
                  type: object
                  properties:
                    language:
                      type: string
                      default: "zh-CN"
                      example: "zh-CN"
                    voice_id:
                      type: string
                      default: "default-female-zh"
                      example: "default-female-zh"
                    speed:
                      type: number
                      default: 1.0
                      minimum: 0.5
                      maximum: 2.0
                      example: 1.0
                    pitch:
                      type: number
                      example: 1.0
                    volume:
                      type: number
                      default: 0.8
                      minimum: 0.0
                      maximum: 1.0
                      example: 0.8
                    enable_vad:
                      type: boolean
                      example: true
                    enable_memory:
                      type: boolean
                      example: true
                options:
                  type: object
                  properties:
                    enable_vad:
                      type: boolean
                    enable_voice_print:
                      type: boolean
                    enable_memory:
                      type: boolean
                    streaming_mode:
                      type: boolean
                metadata:
                  type: object
                  additionalProperties: true
                  description: Additional key-value pairs
      responses:
        '200':
          description: Voice interaction processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  transcript_text:
                    type: string
                    description: Transcribed text from audio input
                    example: "Hello, how are you?"
                  response_text:
                    type: string
                    description: AI response text
                    example: "I'm doing well, thank you for asking!"
                  audio_response:
                    type: string
                    description: Base64 encoded audio response
                    example: "base64_encoded_audio_response"
                  session_id:
                    type: string
                    example: "sess_123456"
                  message_id:
                    type: string
                    example: "msg_123456"
                  confidence:
                    type: number
                    description: Confidence score for recognition
                    example: 0.95
                  processing_time:
                    type: string
                    description: Processing time in milliseconds
                    example: "1500ms"
                  metadata:
                    type: object
                    additionalProperties: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/voice/synthesize:
    post:
      tags:
        - Voice
      summary: Synthesize text to speech (PLANNED)
      description: |
        Convert text input to speech audio.
        
        **Status**: Handler implemented but route not connected yet.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  maxLength: 5000
                  description: Text to synthesize
                  example: "Hello, this is a test message."
                voice_config:
                  type: object
                  properties:
                    voice_id:
                      type: string
                      default: "default-female-zh"
                      example: "default-female-zh"
                    language:
                      type: string
                      default: "zh-CN"
                      example: "zh-CN"
                    speed:
                      type: number
                      default: 1.0
                      minimum: 0.5
                      maximum: 2.0
                      example: 1.0
                    volume:
                      type: number
                      default: 0.8
                      minimum: 0.0
                      maximum: 1.0
                      example: 0.8
                    pitch:
                      type: number
                      example: 1.0
                    sample_rate:
                      type: number
                      default: 16000
                      example: 16000
                    format:
                      type: string
                      default: "wav"
                      enum: ["wav", "mp3", "aac"]
                      example: "wav"
      responses:
        '200':
          description: Text synthesized successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  audio_response:
                    type: string
                    description: Base64 encoded audio data
                    example: "base64_encoded_audio_string"
                  duration:
                    type: string
                    description: Audio duration in seconds
                    example: "2.5s"
                  format:
                    type: string
                    example: "wav"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/voice/voiceprint:
    post:
      tags:
        - Voice
      summary: Voiceprint recognition (PLANNED)
      description: |
        Identify user based on voice characteristics.
        
        **Status**: Handler implemented but route not connected yet.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - audio_data
              properties:
                audio_data:
                  type: string
                  description: Base64 encoded audio data for voiceprint analysis
                  example: "base64_encoded_audio_string"
      responses:
        '200':
          description: Voiceprint analysis completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user_id:
                    type: string
                    description: Matched user ID (if found)
                    example: "user_123456"
                  confidence:
                    type: number
                    description: Confidence score of the match
                    example: 0.92
                  matched:
                    type: boolean
                    description: Whether a match was found
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/voice/sessions:
    get:
      tags:
        - Voice
      summary: Get user voice sessions
      description: Retrieve paginated list of voice sessions for the authenticated user
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: Number of items per page
      responses:
        '200':
          description: Sessions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VoiceSession'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/voice/sessions/{sessionId}/messages:
    get:
      tags:
        - Voice
      summary: Get session messages
      description: Retrieve messages from a specific voice session
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
          description: Session ID
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
            minimum: 1
            maximum: 100
          description: Number of items per page
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VoiceMessage'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/voice/sessions/{sessionId}:
    delete:
      tags:
        - Voice
      summary: Delete voice session
      description: Delete a specific voice session and all associated messages
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
          description: Session ID to delete
      responses:
        '200':
          description: Session deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Session deleted successfully"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  # Authentication Endpoints - PLANNED (handlers ready)
  /api/v1/auth/register:
    post:
      tags:
        - Authentication
      summary: User registration (PLANNED)
      description: |
        Register a new user account.
        
        **Status**: Handler implemented but route not connected yet.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 50
                  pattern: '^[a-zA-Z0-9_-]+$'
                  example: "johndoe"
                email:
                  type: string
                  format: email
                  example: "john@example.com"
                password:
                  type: string
                  minLength: 8
                  format: password
                  example: "SecurePassword123!"
                device_info:
                  type: object
                  properties:
                    device_type:
                      type: string
                      enum: ["mobile", "esp", "web"]
                      example: "mobile"
                    device_name:
                      type: string
                      example: "iPhone 13"
                    capabilities:
                      type: array
                      items:
                        type: string
                      example: ["voice", "text", "display"]
                    metadata:
                      type: object
                      additionalProperties: true
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User registered successfully"
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      tokens:
                        $ref: '#/components/schemas/TokenPair'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: User login (PLANNED)
      description: |
        Authenticate user and receive access tokens.
        
        **Status**: Handler implemented but route not connected yet.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "johndoe"
                password:
                  type: string
                  format: password
                  example: "SecurePassword123!"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      tokens:
                        $ref: '#/components/schemas/TokenPair'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/refresh:
    post:
      tags:
        - Authentication
      summary: Token refresh
      description: Refresh access token using refresh token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token refreshed successfully"
                  data:
                    $ref: '#/components/schemas/TokenPair'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Logout user and invalidate tokens
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Logout successful"
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/auth/change-password:
    put:
      tags:
        - Authentication
      summary: Change password
      description: Change user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - old_password
                - new_password
              properties:
                old_password:
                  type: string
                  format: password
                  example: "OldPassword123!"
                new_password:
                  type: string
                  minLength: 8
                  format: password
                  example: "NewSecurePassword456!"
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Password changed successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          description: Invalid old password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/profile:
    get:
      tags:
        - Authentication
      summary: Get user profile
      description: Get current user profile information
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/auth/validate:
    post:
      tags:
        - Authentication
      summary: Validate token
      description: Validate current access token
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    example: true
                  claims:
                    type: object
                    properties:
                      user_id:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      exp:
                        type: integer
        '401':
          description: Token is invalid or expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # User Management Endpoints - PLANNED (handlers ready)
  /api/v1/users/profile:
    get:
      tags:
        - Users
      summary: Get user profile
      description: Get current user profile with devices and subscription
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '401':
          $ref: '#/components/responses/Unauthorized'

    put:
      tags:
        - Users
      summary: Update user profile
      description: Update current user profile information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 50
                  pattern: '^[a-zA-Z0-9_-]+$'
                  example: "johndoe_updated"
                email:
                  type: string
                  format: email
                  example: "john.updated@example.com"
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Username or email already taken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/users/account:
    delete:
      tags:
        - Users
      summary: Delete user account
      description: Delete current user account (soft delete)
      responses:
        '200':
          description: Account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Account deleted successfully"
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/users/subscription:
    get:
      tags:
        - Users
      summary: Get user subscription
      description: Get current user subscription details and available features
      responses:
        '200':
          description: Subscription details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # Device Management Endpoints - PLANNED (handlers ready)
  /api/v1/devices:
    get:
      tags:
        - Devices
      summary: Get user devices
      description: Get all devices for the current user
      responses:
        '200':
          description: Devices retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      tags:
        - Devices
      summary: Register device
      description: Register a new device for the current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - device_type
                - device_name
              properties:
                device_type:
                  type: string
                  enum: ["mobile", "esp", "web"]
                  example: "mobile"
                device_name:
                  type: string
                  minLength: 1
                  maxLength: 100
                  example: "My iPhone"
                capabilities:
                  type: array
                  items:
                    type: string
                  example: ["voice", "text", "display"]
                metadata:
                  type: object
                  additionalProperties: true
      responses:
        '201':
          description: Device registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Device'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/devices/{id}:
    get:
      tags:
        - Devices
      summary: Get device
      description: Get specific device information
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Device ID
      responses:
        '200':
          description: Device retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Device'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags:
        - Devices
      summary: Update device
      description: Update device information
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Device ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_name:
                  type: string
                  maxLength: 100
                  example: "Updated Device Name"
                capabilities:
                  type: array
                  items:
                    type: string
                  example: ["voice", "text"]
                metadata:
                  type: object
                  additionalProperties: true
      responses:
        '200':
          description: Device updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Device'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Devices
      summary: Delete device
      description: Delete a specific device
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Device ID
      responses:
        '200':
          description: Device deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Device deleted successfully"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/devices/{id}/bind:
    post:
      tags:
        - Devices
      summary: Bind device
      description: Bind device to current user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Device ID
      responses:
        '200':
          description: Device bound successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Device bound successfully"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/devices/{id}/unbind:
    post:
      tags:
        - Devices
      summary: Unbind device
      description: Unbind device from current user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Device ID
      responses:
        '200':
          description: Device unbound successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Device unbound successfully"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/devices/{id}/status:
    put:
      tags:
        - Devices
      summary: Update device status
      description: Update device status
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Device ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: ["online", "offline", "maintenance"]
                  example: "online"
      responses:
        '200':
          description: Device status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Device'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/devices/{id}/heartbeat:
    post:
      tags:
        - Devices
      summary: Send device heartbeat
      description: Send heartbeat signal to indicate device is alive
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Device ID
      responses:
        '200':
          description: Heartbeat received successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Heartbeat received"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/devices/{id}/capabilities/{capability}:
    get:
      tags:
        - Devices
      summary: Check device capability
      description: Check if device supports a specific capability
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Device ID
        - in: path
          name: capability
          required: true
          schema:
            type: string
          description: Capability name
      responses:
        '200':
          description: Capability check result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  supported:
                    type: boolean
                    example: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/devices/stats:
    get:
      tags:
        - Devices
      summary: Get device statistics
      description: Get device statistics for current user
      responses:
        '200':
          description: Device statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      total_devices:
                        type: integer
                        example: 5
                      online_devices:
                        type: integer
                        example: 3
                      offline_devices:
                        type: integer
                        example: 2
                      device_types:
                        type: object
                        additionalProperties:
                          type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'

  # Admin Endpoints - PLANNED (handlers ready)
  /api/v1/admin/stats:
    get:
      tags:
        - Admin
      summary: Get system statistics
      description: Get comprehensive system statistics (Admin only)
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      total_users:
                        type: integer
                        example: 1000
                      active_users:
                        type: integer
                        example: 800
                      total_devices:
                        type: integer
                        example: 1500
                      online_devices:
                        type: integer
                        example: 1200
                      total_sessions:
                        type: integer
                        example: 5000
                      active_sessions:
                        type: integer
                        example: 300
                      total_subscriptions:
                        type: object
                        properties:
                          basic:
                            type: integer
                            example: 600
                          premium:
                            type: integer
                            example: 150
                          enterprise:
                            type: integer
                            example: 50
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/admin/devices:
    get:
      tags:
        - Admin
      summary: Get all devices
      description: Get all devices in the system (Admin only)
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: ["online", "offline", "maintenance"]
          description: Filter by device status
        - in: query
          name: type
          schema:
            type: string
            enum: ["mobile", "esp", "web"]
          description: Filter by device type
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: Number of items per page
      responses:
        '200':
          description: Devices retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeviceWithUser'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/admin/devices/{id}/status:
    put:
      tags:
        - Admin
      summary: Update device status
      description: Update device status (Admin only)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Device ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: ["online", "offline", "maintenance"]
                  example: "maintenance"
      responses:
        '200':
          description: Device status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Device'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/admin/sessions:
    get:
      tags:
        - Admin
      summary: Get all sessions
      description: Get all voice sessions in the system (Admin only)
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: ["active", "ended", "expired"]
          description: Filter by session status
        - in: query
          name: user_id
          schema:
            type: string
          description: Filter by user ID
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: Number of items per page
      responses:
        '200':
          description: Sessions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SessionWithUser'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/admin/sessions/{sessionId}/end:
    post:
      tags:
        - Admin
      summary: End session
      description: Force end a specific session (Admin only)
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
          description: Session ID
      responses:
        '200':
          description: Session ended successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Session ended successfully"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/admin/cleanup/sessions:
    post:
      tags:
        - Admin
      summary: Cleanup expired sessions
      description: Clean up expired sessions from the system (Admin only)
      responses:
        '200':
          description: Cleanup completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Expired sessions cleaned up"
                  cleaned_count:
                    type: integer
                    example: 50
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/admin/cleanup/memories:
    post:
      tags:
        - Admin
      summary: Cleanup expired memories
      description: Clean up expired conversation memories (Admin only)
      responses:
        '200':
          description: Cleanup completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Expired memories cleaned up"
                  cleaned_count:
                    type: integer
                    example: 200
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/admin/cleanup/messages:
    post:
      tags:
        - Admin
      summary: Cleanup old messages
      description: Clean up old messages older than specified days (Admin only)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                days:
                  type: integer
                  default: 90
                  minimum: 7
                  example: 90
      responses:
        '200':
          description: Cleanup completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Old messages cleaned up"
                  cleaned_count:
                    type: integer
                    example: 1000
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/admin/health:
    get:
      tags:
        - Admin
      summary: Get system health
      description: Get detailed system health information (Admin only)
      responses:
        '200':
          description: System health retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        example: "healthy"
                      services:
                        type: object
                        properties:
                          database:
                            type: object
                            properties:
                              status:
                                type: string
                                example: "healthy"
                              latency:
                                type: string
                                example: "5ms"
                          redis:
                            type: object
                            properties:
                              status:
                                type: string
                                example: "healthy"
                              latency:
                                type: string
                                example: "2ms"
                          voice_services:
                            type: object
                            properties:
                              asr:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: "healthy"
                                  latency:
                                    type: string
                                    example: "100ms"
                                  tts:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: "healthy"
                                      latency:
                                        type: string
                                        example: "150ms"
                      resources:
                        type: object
                        properties:
                          cpu_usage:
                            type: number
                            example: 0.25
                          memory_usage:
                            type: number
                            example: 0.65
                          disk_usage:
                            type: number
                            example: 0.45
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/admin/audit-logs:
    get:
      tags:
        - Admin
      summary: Get audit logs
      description: Get system audit logs (Admin only)
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
            minimum: 1
            maximum: 200
          description: Number of items per page
        - in: query
          name: action
          schema:
            type: string
          description: Filter by action type
        - in: query
          name: user_id
          schema:
            type: string
          description: Filter by user ID
      responses:
        '200':
          description: Audit logs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/admin/metrics:
    get:
      tags:
        - Admin
      summary: Get system metrics
      description: Get system performance metrics (Admin only)
      parameters:
        - in: query
          name: range
          schema:
            type: string
            enum: ["1h", "6h", "24h", "7d", "30d"]
            default: "24h"
          description: Time range for metrics
      responses:
        '200':
          description: Metrics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      cpu:
                        type: object
                        properties:
                          usage:
                            type: array
                            items:
                              type: number
                          average:
                            type: number
                            example: 0.25
                          peak:
                            type: number
                            example: 0.85
                      memory:
                        type: object
                        properties:
                          usage:
                            type: array
                            items:
                              type: number
                          average:
                            type: number
                            example: 0.65
                          peak:
                            type: number
                            example: 0.95
                      network:
                        type: object
                        properties:
                          requests_per_second:
                            type: array
                            items:
                              type: number
                          average_response_time:
                            type: string
                            example: "150ms"
                      requests:
                        type: object
                        properties:
                          total:
                            type: integer
                            example: 10000
                          success_rate:
                            type: number
                            example: 0.98
                          error_rate:
                            type: number
                            example: 0.02
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "user_123456"
        username:
          type: string
          example: "johndoe"
        email:
          type: string
          format: email
          example: "john@example.com"
        role:
          type: string
          enum: ["user", "basic", "premium", "enterprise", "admin"]
          example: "basic"
        subscription:
          $ref: '#/components/schemas/Subscription'
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"

    UserProfile:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            devices:
              type: array
              items:
                $ref: '#/components/schemas/Device'
            stats:
              type: object
              properties:
                total_sessions:
                  type: integer
                  example: 100
                total_messages:
                  type: integer
                  example: 500
                last_activity:
                  type: string
                  format: date-time
                  example: "2023-01-01T12:00:00Z"

    Subscription:
      type: object
      properties:
        plan_type:
          type: string
          enum: ["free", "basic", "premium", "enterprise"]
          example: "basic"
        features:
          type: array
          items:
            type: string
          example: ["voice_interaction", "memory", "multi_device"]
        is_active:
          type: boolean
          example: true
        expires_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"

    Device:
      type: object
      properties:
        id:
          type: string
          example: "device_123456"
        device_type:
          type: string
          enum: ["mobile", "esp", "web"]
          example: "mobile"
        device_name:
          type: string
          example: "My iPhone"
        user_id:
          type: string
          example: "user_123456"
        status:
          type: string
          enum: ["online", "offline", "maintenance"]
          example: "online"
        capabilities:
          type: array
          items:
            type: string
          example: ["voice", "text", "display"]
        metadata:
          type: object
          additionalProperties: true
        last_seen:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"

    DeviceWithUser:
      allOf:
        - $ref: '#/components/schemas/Device'
        - type: object
          properties:
            user:
              type: object
              properties:
                id:
                  type: string
                username:
                  type: string
                email:
                  type: string

    VoiceSession:
      type: object
      properties:
        id:
          type: string
          example: "sess_123456"
        user_id:
          type: string
          example: "user_123456"
        device_id:
          type: string
          example: "device_123456"
        status:
          type: string
          enum: ["active", "ended", "expired"]
          example: "active"
        message_count:
          type: integer
          example: 25
        duration:
          type: string
          example: "15m"
        started_at:
          type: string
          format: date-time
          example: "2023-01-01T10:00:00Z"
        ended_at:
          type: string
          format: date-time
          example: "2023-01-01T10:15:00Z"
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-01-01T10:15:00Z"

    SessionWithUser:
      allOf:
        - $ref: '#/components/schemas/VoiceSession'
        - type: object
          properties:
            user:
              type: object
              properties:
                id:
                  type: string
                username:
                  type: string
                email:
                  type: string

    VoiceMessage:
      type: object
      properties:
        id:
          type: string
          example: "msg_123456"
        session_id:
          type: string
          example: "sess_123456"
        message_type:
          type: string
          enum: ["user", "assistant", "system"]
          example: "user"
        content:
          type: string
          example: "Hello, how are you?"
        audio_data:
          type: string
          description: Base64 encoded audio data
          example: "base64_encoded_audio_string"
        confidence:
          type: number
          description: Confidence score for voice recognition
          example: 0.95
        processing_time:
          type: string
          example: "150ms"
        metadata:
          type: object
          additionalProperties: true
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T10:00:00Z"

    TokenPair:
      type: object
      properties:
        access_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refresh_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expires_at:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"
        token_type:
          type: string
          default: "Bearer"
          example: "Bearer"

    AuditLog:
      type: object
      properties:
        id:
          type: string
          example: "audit_123456"
        user_id:
          type: string
          example: "user_123456"
        action:
          type: string
          example: "voice_interaction"
        resource_type:
          type: string
          example: "session"
        resource_id:
          type: string
          example: "sess_123456"
        details:
          type: object
          additionalProperties: true
        ip_address:
          type: string
          example: "192.168.1.1"
        user_agent:
          type: string
          example: "Mozilla/5.0..."
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T10:00:00Z"

    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 20
        total:
          type: integer
          example: 100
        pages:
          type: integer
          example: 5
        has_next:
          type: boolean
          example: true
        has_prev:
          type: boolean
          example: false

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Invalid request"
        details:
          type: string
          example: "Additional error details"

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Forbidden:
      description: Forbidden - Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: System
    description: System health and status endpoints
  - name: Voice
    description: Voice interaction and processing endpoints
  - name: Authentication
    description: User authentication and authorization endpoints
  - name: Users
    description: User profile and account management endpoints
  - name: Devices
    description: Device management and binding endpoints
  - name: Admin
    description: Administrative and system management endpoints